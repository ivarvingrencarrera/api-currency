name: Continuous Integration

on: [push]

jobs:

  test:
    name: Testing
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - 
        name: Install Poetry
        uses: snok/install-poetry@v1
        with:
            virtualenvs-in-project: true
      - 
        name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
            path: .venv
            key: venv-${{ hashFiles('**/poetry.lock') }}
      - 
        name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --with test --no-interaction --no-ansi -vvv
      -
        name: Run tests
        run: poetry run make testing
  
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - 
        name: Install Poetry
        uses: snok/install-poetry@v1
        with:
            virtualenvs-in-project: true
      - 
        name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
            path: .venv
            key: venv-${{ hashFiles('**/poetry.lock') }}
      - 
        name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --with lint --no-interaction --no-ansi -vvv
      -
        name: Run tests
        run: poetry run make linting

  build:
    needs: [test, lint]
    name: Building
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/currency_converter:${{github.run_number}}